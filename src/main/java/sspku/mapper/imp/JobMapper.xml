<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sspku.mapper.JobMapper">
	<resultMap id="BaseResultMap" type="sspku.dao.Job">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="source" property="source" jdbcType="VARCHAR" />
		<result column="sourceId" property="sourceid" jdbcType="VARCHAR" />
		<result column="companyId" property="companyid" jdbcType="INTEGER" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="location" property="location" jdbcType="VARCHAR" />
		<result column="education" property="education" jdbcType="INTEGER" />
		<result column="minExperience" property="minexperience"
			jdbcType="INTEGER" />
		<result column="maxExperience" property="maxexperience"
			jdbcType="INTEGER" />
		<result column="minSalary" property="minsalary" jdbcType="INTEGER" />
		<result column="maxSalary" property="maxsalary" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="workType" property="worktype" jdbcType="INTEGER" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
		<result column="refLink" property="reflink" jdbcType="VARCHAR" />
		<result column="docLink" property="doclink" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="sspku.dao.JobWithBLOBs"
		extends="BaseResultMap">
		<result column="requires" property="requires" jdbcType="LONGVARCHAR" />
		<result column="description" property="description" jdbcType="LONGVARCHAR" />
		<result column="remark" property="remark" jdbcType="LONGVARCHAR" />
		<result column="searchIndex" property="searchindex" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, source, sourceId, companyId, city, location,
		education,
		minExperience,
		maxExperience, minSalary, maxSalary, state,
		workType, createTime, endTime, refLink,
		docLink
	</sql>
	<sql id="Blob_Column_List">
		requires, description, remark, searchIndex
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="sspku.dao.JobExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from jobinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="sspku.dao.JobExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from jobinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from jobinfo
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectBaseByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jobinfo
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		jobinfo
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="sspku.dao.JobExample">
		delete from jobinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="sspku.dao.JobWithBLOBs">
		insert into jobinfo (id, name,
		source,
		sourceId, companyId, city,
		location, education, minExperience,
		maxExperience, minSalary, maxSalary,
		state, workType, createTime,
		endTime, refLink, docLink,
		requires, description, remark,
		searchIndex)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{source,jdbcType=VARCHAR},
		#{sourceid,jdbcType=VARCHAR},
		#{companyid,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR},
		#{location,jdbcType=VARCHAR}, #{education,jdbcType=INTEGER},
		#{minexperience,jdbcType=INTEGER},
		#{maxexperience,jdbcType=INTEGER},
		#{minsalary,jdbcType=INTEGER}, #{maxsalary,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER}, #{worktype,jdbcType=INTEGER},
		#{createtime,jdbcType=TIMESTAMP},
		#{endtime,jdbcType=TIMESTAMP},
		#{reflink,jdbcType=VARCHAR}, #{doclink,jdbcType=VARCHAR},
		#{requires,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR},
		#{remark,jdbcType=LONGVARCHAR},
		#{searchindex,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="sspku.dao.JobWithBLOBs">
		insert into jobinfo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="sourceid != null">
				sourceId,
			</if>
			<if test="companyid != null">
				companyId,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="location != null">
				location,
			</if>
			<if test="education != null">
				education,
			</if>
			<if test="minexperience != null">
				minExperience,
			</if>
			<if test="maxexperience != null">
				maxExperience,
			</if>
			<if test="minsalary != null">
				minSalary,
			</if>
			<if test="maxsalary != null">
				maxSalary,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="worktype != null">
				workType,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="endtime != null">
				endTime,
			</if>
			<if test="reflink != null">
				refLink,
			</if>
			<if test="doclink != null">
				docLink,
			</if>
			<if test="requires != null">
				requires,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="searchindex != null">
				searchIndex,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				#{source,jdbcType=VARCHAR},
			</if>
			<if test="sourceid != null">
				#{sourceid,jdbcType=VARCHAR},
			</if>
			<if test="companyid != null">
				#{companyid,jdbcType=INTEGER},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				#{location,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				#{education,jdbcType=INTEGER},
			</if>
			<if test="minexperience != null">
				#{minexperience,jdbcType=INTEGER},
			</if>
			<if test="maxexperience != null">
				#{maxexperience,jdbcType=INTEGER},
			</if>
			<if test="minsalary != null">
				#{minsalary,jdbcType=INTEGER},
			</if>
			<if test="maxsalary != null">
				#{maxsalary,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="worktype != null">
				#{worktype,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="endtime != null">
				#{endtime,jdbcType=TIMESTAMP},
			</if>
			<if test="reflink != null">
				#{reflink,jdbcType=VARCHAR},
			</if>
			<if test="doclink != null">
				#{doclink,jdbcType=VARCHAR},
			</if>
			<if test="requires != null">
				#{requires,jdbcType=LONGVARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=LONGVARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
			<if test="searchindex != null">
				#{searchindex,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="sspku.dao.JobExample"
		resultType="java.lang.Integer">
		select count(*) from jobinfo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update jobinfo
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.source != null">
				source = #{record.source,jdbcType=VARCHAR},
			</if>
			<if test="record.sourceid != null">
				sourceId = #{record.sourceid,jdbcType=VARCHAR},
			</if>
			<if test="record.companyid != null">
				companyId = #{record.companyid,jdbcType=INTEGER},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
			<if test="record.location != null">
				location = #{record.location,jdbcType=VARCHAR},
			</if>
			<if test="record.education != null">
				education = #{record.education,jdbcType=INTEGER},
			</if>
			<if test="record.minexperience != null">
				minExperience = #{record.minexperience,jdbcType=INTEGER},
			</if>
			<if test="record.maxexperience != null">
				maxExperience = #{record.maxexperience,jdbcType=INTEGER},
			</if>
			<if test="record.minsalary != null">
				minSalary = #{record.minsalary,jdbcType=INTEGER},
			</if>
			<if test="record.maxsalary != null">
				maxSalary = #{record.maxsalary,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.worktype != null">
				workType = #{record.worktype,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.endtime != null">
				endTime = #{record.endtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.reflink != null">
				refLink = #{record.reflink,jdbcType=VARCHAR},
			</if>
			<if test="record.doclink != null">
				docLink = #{record.doclink,jdbcType=VARCHAR},
			</if>
			<if test="record.requires != null">
				requires = #{record.requires,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.description != null">
				description = #{record.description,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.searchindex != null">
				searchIndex = #{record.searchindex,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update jobinfo
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		source =
		#{record.source,jdbcType=VARCHAR},
		sourceId =
		#{record.sourceid,jdbcType=VARCHAR},
		companyId =
		#{record.companyid,jdbcType=INTEGER},
		city =
		#{record.city,jdbcType=VARCHAR},
		location =
		#{record.location,jdbcType=VARCHAR},
		education =
		#{record.education,jdbcType=INTEGER},
		minExperience =
		#{record.minexperience,jdbcType=INTEGER},
		maxExperience =
		#{record.maxexperience,jdbcType=INTEGER},
		minSalary =
		#{record.minsalary,jdbcType=INTEGER},
		maxSalary =
		#{record.maxsalary,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER},
		workType =
		#{record.worktype,jdbcType=INTEGER},
		createTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		endTime =
		#{record.endtime,jdbcType=TIMESTAMP},
		refLink =
		#{record.reflink,jdbcType=VARCHAR},
		docLink =
		#{record.doclink,jdbcType=VARCHAR},
		requires =
		#{record.requires,jdbcType=LONGVARCHAR},
		description =
		#{record.description,jdbcType=LONGVARCHAR},
		remark =
		#{record.remark,jdbcType=LONGVARCHAR},
		searchIndex =
		#{record.searchindex,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update jobinfo
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		source =
		#{record.source,jdbcType=VARCHAR},
		sourceId =
		#{record.sourceid,jdbcType=VARCHAR},
		companyId =
		#{record.companyid,jdbcType=INTEGER},
		city =
		#{record.city,jdbcType=VARCHAR},
		location =
		#{record.location,jdbcType=VARCHAR},
		education =
		#{record.education,jdbcType=INTEGER},
		minExperience =
		#{record.minexperience,jdbcType=INTEGER},
		maxExperience =
		#{record.maxexperience,jdbcType=INTEGER},
		minSalary =
		#{record.minsalary,jdbcType=INTEGER},
		maxSalary =
		#{record.maxsalary,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER},
		workType =
		#{record.worktype,jdbcType=INTEGER},
		createTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		endTime =
		#{record.endtime,jdbcType=TIMESTAMP},
		refLink =
		#{record.reflink,jdbcType=VARCHAR},
		docLink =
		#{record.doclink,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="sspku.dao.JobWithBLOBs">
		update jobinfo
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				source = #{source,jdbcType=VARCHAR},
			</if>
			<if test="sourceid != null">
				sourceId = #{sourceid,jdbcType=VARCHAR},
			</if>
			<if test="companyid != null">
				companyId = #{companyid,jdbcType=INTEGER},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=INTEGER},
			</if>
			<if test="minexperience != null">
				minExperience = #{minexperience,jdbcType=INTEGER},
			</if>
			<if test="maxexperience != null">
				maxExperience = #{maxexperience,jdbcType=INTEGER},
			</if>
			<if test="minsalary != null">
				minSalary = #{minsalary,jdbcType=INTEGER},
			</if>
			<if test="maxsalary != null">
				maxSalary = #{maxsalary,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="worktype != null">
				workType = #{worktype,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="endtime != null">
				endTime = #{endtime,jdbcType=TIMESTAMP},
			</if>
			<if test="reflink != null">
				refLink = #{reflink,jdbcType=VARCHAR},
			</if>
			<if test="doclink != null">
				docLink = #{doclink,jdbcType=VARCHAR},
			</if>
			<if test="requires != null">
				requires = #{requires,jdbcType=LONGVARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=LONGVARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
			<if test="searchindex != null">
				searchIndex = #{searchindex,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="sspku.dao.JobWithBLOBs">
		update
		jobinfo
		set name = #{name,jdbcType=VARCHAR},
		source =
		#{source,jdbcType=VARCHAR},
		sourceId = #{sourceid,jdbcType=VARCHAR},
		companyId = #{companyid,jdbcType=INTEGER},
		city =
		#{city,jdbcType=VARCHAR},
		location = #{location,jdbcType=VARCHAR},
		education = #{education,jdbcType=INTEGER},
		minExperience =
		#{minexperience,jdbcType=INTEGER},
		maxExperience =
		#{maxexperience,jdbcType=INTEGER},
		minSalary =
		#{minsalary,jdbcType=INTEGER},
		maxSalary =
		#{maxsalary,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		workType = #{worktype,jdbcType=INTEGER},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		endTime =
		#{endtime,jdbcType=TIMESTAMP},
		refLink = #{reflink,jdbcType=VARCHAR},
		docLink = #{doclink,jdbcType=VARCHAR},
		requires =
		#{requires,jdbcType=LONGVARCHAR},
		description =
		#{description,jdbcType=LONGVARCHAR},
		remark =
		#{remark,jdbcType=LONGVARCHAR},
		searchIndex =
		#{searchindex,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="sspku.dao.Job">
		update jobinfo
		set
		name = #{name,jdbcType=VARCHAR},
		source = #{source,jdbcType=VARCHAR},
		sourceId = #{sourceid,jdbcType=VARCHAR},
		companyId =
		#{companyid,jdbcType=INTEGER},
		city = #{city,jdbcType=VARCHAR},
		location = #{location,jdbcType=VARCHAR},
		education =
		#{education,jdbcType=INTEGER},
		minExperience =
		#{minexperience,jdbcType=INTEGER},
		maxExperience =
		#{maxexperience,jdbcType=INTEGER},
		minSalary =
		#{minsalary,jdbcType=INTEGER},
		maxSalary =
		#{maxsalary,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		workType = #{worktype,jdbcType=INTEGER},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		endTime =
		#{endtime,jdbcType=TIMESTAMP},
		refLink = #{reflink,jdbcType=VARCHAR},
		docLink = #{doclink,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>