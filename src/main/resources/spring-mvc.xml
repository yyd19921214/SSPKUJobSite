<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/task 
http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 扫描包路径 -->
	<context:component-scan base-package="sspku.controller"></context:component-scan>

	<!-- 视图映射设定 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/web/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 处理静态资源 -->
	<mvc:default-servlet-handler />
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager" />
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<value>
				atom=application/atom+xml
				html=text/html
				json=application/json
				*=*/*
			</value>
		</property>
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>


	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisFactory" />
		<property name="defaultSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<!-- <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="actService" /> <property name="targetMethod" 
		value="postLatestJobByMail" /> <property name="concurrent" value="false" 
		/> </bean> -->

	<!-- <bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="jobDetail" /> <property name="cronExpression" 
		value="* * * 1/7 * ?" /> </bean> -->

	<!-- <bean id="jobRec" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="recService" /> <property name="targetMethod" 
		value="offlineCollabrativeRec" /> <property name="concurrent" value="false" 
		/> </bean> -->

	<!-- <bean id="trigger_rec" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="jobRec" /> <property name="cronExpression" 
		value="0 0/30 * * * ?" /> </bean> -->

	<!-- <bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" 
		lazy-init="true"> <property name="triggers"> <list> <ref bean="trigger" /> 
		<ref bean="trigger_rec" /> </list> </property> </bean> -->

</beans>